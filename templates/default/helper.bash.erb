#!/bin/bash
#
# This file was generated by chef for <%= node['fqdn'] %>
# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN BY CHEF CLIENT
#

EYE_BIN=<%= @eye_bin %>
CONFIG_DIR=<%= @config_dir || "/etc/eye/#{@user || 'root'}" %>
RUN_USER=<%= @user || 'root' %>
LOG_FILE=<%= @log_file || '/var/log/eye.log' %>
APPLICATION=<%=@application_name %>
COMMANDS=(break load delete history info match xinfo monitor restart reload signal start stop trace unmonitor user_command watch check status)
source /etc/eye/functions

make_mask() {
  local mask
  mask=""
  if [ ! -z "${APPLICATION}" ] && [ "${APPLICATION}" != "" ]; then
    mask="${APPLICATION}:"
  fi
  if [ ! -z $1 ]; then
    mask="${mask}$1"
  else
    mask="${mask}all"
  fi
  echo ${mask}
}

in_array() {
  local i
  for i in "${COMMANDS[@]}"
  do
    if [[ "$i" == "$1" ]];  then
    return 0
    fi
  done
  return 1
}

if in_array $1; then
  case $1 in
    check)
      check_all
      ;;
    reload|load)
      load_all
      ;;
    signal|user_command)
      execute $1 $2 $(make_mask $3)
      ;;
    status)
      execute status $2
      ;;
    xinfo)
      execute xinfo $2
      ;;
    *)
      execute $1 $(make_mask $2)
      ;;
  esac
else
  echo "$0 break MASK[,...]         # break chain executing"
  echo "$0 check                    # check config file syntax"
  echo "$0 delete MASK[,...]        # delete app,group or process"
  echo "$0 explain                  # explain config tree"
  echo "$0 history [MASK,...]       # processes history"
  echo "$0 info [MASK]              # processes info"
  echo "$0 reload|load              # reload application config (run eye-daemon if not) (-f foreground load)"
  echo "$0 match MASK[,...]         # match app,group or process"
  echo "$0 monitor MASK[,...]       # monitor app,group or process"
  echo "$0 oinfo                    # onelined info"
  echo "$0 restart MASK[,...]       # restart app,group or process"
  echo "$0 signal SIG MASK[,...]    # send signal to app,group or process"
  echo "$0 start MASK[,...]         # start app,group or process"
  echo "$0 status NAME              # return exit status for process name 0-up, 3-unmonitored"
  echo "$0 stop MASK[,...]          # stop app,group or process"
  echo "$0 trace [MASK]             # tracing log(tail + grep) for app,group or process"
  echo "$0 unmonitor MASK[,...]     # unmonitor app,group or process"
  echo "$0 user_command CMD [MASK]  # execute user_command (dsl command)"
  echo "$0 watch [MASK]             # interactive processes info"
  echo "$0 xinfo                    # eye-deamon info (-c show current config)"
fi
